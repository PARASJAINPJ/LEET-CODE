class Solution {
    public int numIslands(char[][] grid) {
        if(grid.length==0){
            return 0;
        }
        int islands=0;
        for(int i=0;i<grid.length;i++){
            for(int j=0;j<grid[0].length;j++){
                if(grid[i][j]=='1'){
                    dfs(grid,i,j);
                    islands++;
                }
            }
        }
        return islands;
        }
    public void dfs(char[][] grid,int row,int column){
        if(row<0 || column<0 || row>grid.length-1 ||column>grid[0].length-1)return;
        if(grid[row][column]=='0')return;
        
        grid[row][column]='0';
        //make all 4 directions 0 i.e connected lands
       dfs(grid,row-1,column);
       dfs(grid,row+1,column);
       dfs(grid,row,column+1);
       dfs(grid,row,column-1);
    }
}
