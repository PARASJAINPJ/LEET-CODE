class Solution {
    public int findPeakElement(int[] nums) {
     //my solution
      int n=nums.length;
      if(n==1) return 0;
      if(nums[0]>nums[1]) return 0;
      if(nums[n-1]>nums[n-2]) return n-1;
      if(nums.length>=3){ 
      for(int i=1;i<nums.length-1;i++){
          if(nums[i]>nums[i+1] && nums[i]>nums[i-1]){
              return i;
          }
      }
      }
      return 0;
    // another solution
    // for(int i=nums.length-1;i>=1;i--){
    //         if(nums[i-1]<nums[i]){
    //             return i;
    //         }
    //     }
    //     return 0;
        
    }
}
// binary search solution
// class Solution {
//     public int findPeakElement(int[] nums) {
//        int s=0,e=nums.length-1,mid;
//        while(s<e)
//        {
//            mid=(s+e)/2;
//            if(nums[mid]<nums[mid+1])
//            s=mid+1;
//            else 
//            e=mid;
//        }
//        return s;
//     }
// }
